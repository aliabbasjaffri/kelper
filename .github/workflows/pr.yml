name: PR Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # - name: Clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: -- -D warnings
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  build-and-test:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        version: [1.85.0, stable]
        platform:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Docker
        if: ${{ matrix.platform.os == 'macos-latest' }}
        run: |
          # Install Docker Desktop for Mac via brew
          brew install --cask docker

          # Start Docker Desktop and wait for it to be ready
          open -a Docker

          # Wait for Docker Desktop to start
          echo "Waiting for Docker to start..."
          timeout=120
          while ! docker info > /dev/null 2>&1; do
            if [ $timeout -le 0 ]; then
              echo "Docker failed to start within timeout"
              exit 1
            fi
            timeout=$((timeout - 1))
            sleep 1
          done

          echo "Docker started successfully"
          docker version
          docker info
      - name: Setup Kubernetes
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: testing-cluster
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}
          override: true
          target: ${{ matrix.platform.target }}
          components: clippy, rustfmt
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=${{ matrix.platform.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.platform.target }}
