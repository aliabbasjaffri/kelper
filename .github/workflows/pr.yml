name: PR Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # - name: Clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: -- -D warnings
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  build-and-test:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        version: [1.85.0, stable]
        platform:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install macOS dependencies
        if: ${{ matrix.platform.os == 'macos-latest' }}
        run: |
          # Install Homebrew if not present
          # if ! command -v brew &> /dev/null; then
          #   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          # fi

          # Install coreutils and Docker
          brew install coreutils
          brew install --cask docker

          # Start Docker in background mode
          nohup /Applications/Docker.app/Contents/MacOS/Docker --unattended &> /dev/null &

          # Wait for Docker to be ready
          while ! docker system info &> /dev/null; do
            echo "Waiting for Docker to start..."
            sleep 5
          done
      - name: Setup Kubernetes
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: testing-cluster
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}
          override: true
          target: ${{ matrix.platform.target }}
          components: clippy, rustfmt
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=${{ matrix.platform.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.platform.target }}
